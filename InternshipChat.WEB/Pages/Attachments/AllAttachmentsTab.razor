@using InternshipChat.Shared.DTO.ChatDtos;
@using InternshipChat.WEB.Pages.Chats

<div class="d-flex flex-column gap-3 pb-3" style="max-height:65vh;min-height:65vh; overflow:scroll;">
    @foreach (var chatAttachment in attachments)
    {
        <ChatAttachmentCard chatAttachment="chatAttachment" OnDeleteAttachment="@HandleDeleteAttachment"></ChatAttachmentCard>
    }
    <div>
        <DocumentAttachment ChatId="@ChatId" UserId="@CurrentUserId" OnAttachmentProcessed="@HandleNewAttachment"></DocumentAttachment>
    </div>
</div>

@code {
    [Parameter] public int ChatId { get; set; }
    [Parameter] public int CurrentUserId { get; set; }
    [Parameter] public List<ChatAttachmentDTO> attachments { get; set; }
    [Parameter] public EventCallback<int> OnDocumentUploaded { get; set; }
    [Parameter] public EventCallback<int> OnDeleteAttachment { get; set; }

    private async Task HandleNewAttachment(ChatAttachmentDTO chatAttachment)
    {
        if (chatAttachment.ReceiverId == null)
        {
            attachments.Add(chatAttachment);
            StateHasChanged();
            await OnDocumentUploaded.InvokeAsync();
        } else
        {
            await OnDocumentUploaded.InvokeAsync(chatAttachment.ReceiverId.GetValueOrDefault());
        }
    }

    private async Task HandleDeleteAttachment(int attachmentId)
    {
        await OnDeleteAttachment.InvokeAsync(attachmentId);
    }
}
