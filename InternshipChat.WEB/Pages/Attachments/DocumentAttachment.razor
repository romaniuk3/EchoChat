@using InternshipChat.Shared.DTO.ChatDtos;
@using InternshipChat.WEB.Services.Contracts;
@inject IImageService _imageService

<MudFileUpload T="IBrowserFile" Accept=".docx" FilesChanged="UploadDocument">
    <ButtonTemplate>
        <MudButton HtmlTag="label"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.CloudUpload"
                   for="@context">
            Attach your document
        </MudButton>
    </ButtonTemplate>
</MudFileUpload>
@if(document != null)
{
    <MudList>
            <MudListItem Icon="@Icons.Material.Filled.AttachFile">
                @document.Name <code>@document.Size bytes</code>
            </MudListItem>
    </MudList>
}

@code {
    [Parameter] public int ChatId { get; set; }
    [Parameter] public int UserId { get; set; }

    private IBrowserFile? document;

    private async Task UploadDocument(IBrowserFile file)
    {
        var attachmentDto = new ChatAttachmentDTO
            {
                ChatId = ChatId,
                SenderId = UserId,
                FileName = file.Name,
                Document = file
            };
        document = file;
        Console.WriteLine("IM GOING TO CALL SERVICE! ");
        var res = _imageService.UploadAttachment(attachmentDto);
    }

    private async Task<IFormFile> ConvertToFormFile(IBrowserFile file)
    {
        using (var stream = file.OpenReadStream())
        {
            return new FormFile(stream, 0, file.Size, file.Name, file.Name);
        }
    }
}
