@using InternshipChat.DAL.Entities;
@using InternshipChat.WEB.Pages.Chats
@using InternshipChat.WEB.Services.Contracts;
@inject IImageService _imageService
@inject IDialogService DialogService

<div class="d-flex flex-column gap-3 pb-3" style="max-height:65vh;min-height:65vh; overflow:scroll;">
    <MudSwitch CheckedChanged="ShowCompletedChanged" T=bool Label="Show completed" Color="Color.Info" />
    @foreach (var signatureAttachment in SignatureAttachments)
    {
        <SignatureAttachmentCard SignatureAttachment="signatureAttachment" OnDeleteAttachment="@HandleDeleteAttachment" CurrentUserId="CurrentUserId"></SignatureAttachmentCard>
    }
</div>

@code {
    [Parameter] public List<ChatAttachment> SignatureAttachments { get; set; }
    [Parameter] public int CurrentUserId { get; set; }
    [Parameter] public EventCallback<bool> OnShowCompletedPressed { get; set; }
    [Parameter] public EventCallback<int> OnDeleteAttachment { get; set; }
    private bool ShowCompleted;

    private async Task ShowCompletedChanged(bool isChecked)
    {
        await OnShowCompletedPressed.InvokeAsync(isChecked);
    }

    private async Task HandleDeleteAttachment(int attachmentId)
    {
        await OnDeleteAttachment.InvokeAsync(attachmentId);
    }
}
