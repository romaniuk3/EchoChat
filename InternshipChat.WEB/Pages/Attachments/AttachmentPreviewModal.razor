@using InternshipChat.WEB.Services.Contracts;
@inject IJSRuntime JS
@inject IImageService _imageService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Rounded.Call" Class="mr-3 mb-1"></MudIcon>
            Edit before sending
        </MudText>
    </TitleContent>
    <DialogContent>
            <div id='container' style='background: gray; width: 60vw; height: 85vh; margin: 0 auto;'></div>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public IBrowserFile PdfDocument { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var url = await _imageService.ToBase64(PdfDocument);
            await JS.InvokeVoidAsync("loadPDF", "#container", url);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Save()
    {
        var base64result = await JS.InvokeAsync<string>("exportPDF");

        MudDialog.Close(DialogResult.Ok(base64result));
    }
}
