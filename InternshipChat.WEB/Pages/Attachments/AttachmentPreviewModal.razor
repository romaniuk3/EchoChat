@using InternshipChat.WEB.Services.Contracts;
@inject IJSRuntime JS
@inject IFileService _fileService

<MudDialog>
    <DialogContent>
            <div id='container' style='background: gray; width: 60vw; height: 85vh; margin: 0 auto;'></div>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public IBrowserFile PdfDocument { get; set; }
    [Parameter] public string PdfUrl { get; set; }
    [Parameter] public bool ReadOnly { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ShowDocument();
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task ShowDocument()
    {
        string url = string.Empty;
        url = PdfUrl != null ? PdfUrl : await _fileService.ToBase64(PdfDocument);

        await JS.InvokeVoidAsync("loadPDF", "#container", url, ReadOnly);
    }

    private async Task Save()
    {
        var base64result = await JS.InvokeAsync<string>("exportPDF");

        MudDialog.Close(DialogResult.Ok(base64result));
    }
}
