@page "/chats"
@using InternshipChat.DAL.Entities
@using InternshipChat.WEB.Services.Contracts
@inject IDialogService DialogService
@inject IChatService ChatService
@inject NavigationManager Navigation

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudTable T="Chat" OnRowClick="@OpenChat" Items="@chats" Bordered="false" @ref="dataGrid" ServerData="@(new Func<TableState, Task<TableData<Chat>>>(GetServerData))">
        <ToolBarContent>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@OpenCreateChatModal">New Chat</MudButton>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortLabel="name" T="Chat">Email</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortLabel="description" T="Chat">Description</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>

@code {
    private IEnumerable<Chat> chats;
    private MudTable<Chat> dataGrid;

    private async void OpenCreateChatModal()
    {
        var dialog = DialogService.Show<CreateChatModal>("Create chat");
        var result = await dialog.Result;
        if (!result.Canceled)
        {
            await dataGrid.ReloadServerData();
        }
    }

    private async Task<TableData<Chat>> GetServerData(TableState state)
    {
        chats = await ChatService.GetAllChats();

        return new TableData<Chat>()
            {
                Items = chats
            };
    }

    private void OpenChat(TableRowClickEventArgs<Chat> chat)
    {
        Navigation.NavigateTo($"chats/{chat.Item.Id}");
    }
}
