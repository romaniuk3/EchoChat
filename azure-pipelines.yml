trigger:
- master

pool:
  name: 'default'
  vmImage: 'komputer'
  
steps:
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: MSBuild@1
  displayName: 'DB project build'
  inputs:
    solution: '**/ChatDbProject/ChatDbProject.sqlproj'

- task: CopyFiles@2
  displayName: 'Copy dacpac'
  inputs:
    Contents: '**/*.dacpac'
    TargetFolder: '$(build.artifactStagingDirectory)/dacpacs'
    flattenFolders: true

# - task: CmdLine@2
#   displayName: 'Start LocalDb'
#   inputs:
#     script: sqllocaldb  start MSSQLLocalDB

# - task: SqlDacpacDeploymentOnMachineGroup@0
#   displayName: 'Deploy DBProject to localDB'
#   inputs:
#     TaskType: 'dacpac'
#     DacpacFile: '$(build.artifactStagingDirectory)/dacpacs/**.dacpac'
#     TargetMethod: 'connectionString'
#     ConnectionString: 'Server=(localdb)\MSSQLLocalDB;Integrated Security=true;Database=InternshipChatLocal'

# - task: DotNetCoreCLI@2
#   displayName: 'Integration tests'
#   inputs:
#     command: 'test'
#     projects: './InternshipChat.IntegrationTests/InternshipChat.IntegrationTests.csproj'
#     arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish packaging'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true 

- task: PublishBuildArtifacts@1    
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'